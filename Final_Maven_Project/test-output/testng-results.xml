<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="11" passed="10">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="329473" started-at="2020-03-10T16:57:07 EDT" finished-at="2020-03-10T17:02:37 EDT">
    <groups>
    </groups>
    <test name="Default test" duration-ms="329473" started-at="2020-03-10T16:57:07 EDT" finished-at="2020-03-10T17:02:37 EDT">
      <class name="com.testing.AppTest">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testing.AppTest@76329302]" name="beforeMethod" is-config="true" duration-ms="14589" started-at="2020-03-10T16:57:07 EDT" finished-at="2020-03-10T16:57:22 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="NoEmail()[pri:1, instance:com.testing.AppTest@76329302]" name="NoEmail" duration-ms="2174" started-at="2020-03-10T16:57:22 EDT" finished-at="2020-03-10T16:57:24 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NoEmail -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.testing.AppTest@76329302]" name="afterMethod" is-config="true" duration-ms="1668" started-at="2020-03-10T16:57:24 EDT" finished-at="2020-03-10T16:57:26 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=NoEmail status=SUCCESS method=AppTest.NoEmail()[pri:1, instance:com.testing.AppTest@76329302] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testing.AppTest@76329302]" name="beforeMethod" is-config="true" duration-ms="13944" started-at="2020-03-10T16:57:26 EDT" finished-at="2020-03-10T16:57:40 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="NoPassword()[pri:2, instance:com.testing.AppTest@76329302]" name="NoPassword" duration-ms="5655" started-at="2020-03-10T16:57:40 EDT" finished-at="2020-03-10T16:57:45 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NoPassword -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.testing.AppTest@76329302]" name="afterMethod" is-config="true" duration-ms="918" started-at="2020-03-10T16:57:45 EDT" finished-at="2020-03-10T16:57:46 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=NoPassword status=SUCCESS method=AppTest.NoPassword()[pri:2, instance:com.testing.AppTest@76329302] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testing.AppTest@76329302]" name="beforeMethod" is-config="true" duration-ms="12926" started-at="2020-03-10T16:57:46 EDT" finished-at="2020-03-10T16:57:59 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="InvalidEmail()[pri:3, instance:com.testing.AppTest@76329302]" name="InvalidEmail" duration-ms="4459" started-at="2020-03-10T16:57:59 EDT" finished-at="2020-03-10T16:58:04 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidEmail -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.testing.AppTest@76329302]" name="afterMethod" is-config="true" duration-ms="894" started-at="2020-03-10T16:58:04 EDT" finished-at="2020-03-10T16:58:04 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=InvalidEmail status=SUCCESS method=AppTest.InvalidEmail()[pri:3, instance:com.testing.AppTest@76329302] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testing.AppTest@76329302]" name="beforeMethod" is-config="true" duration-ms="13934" started-at="2020-03-10T16:58:04 EDT" finished-at="2020-03-10T16:58:18 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="InvalidPassword()[pri:4, instance:com.testing.AppTest@76329302]" name="InvalidPassword" duration-ms="7778" started-at="2020-03-10T16:58:18 EDT" finished-at="2020-03-10T16:58:26 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidPassword -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.testing.AppTest@76329302]" name="afterMethod" is-config="true" duration-ms="893" started-at="2020-03-10T16:58:26 EDT" finished-at="2020-03-10T16:58:27 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=InvalidPassword status=SUCCESS method=AppTest.InvalidPassword()[pri:4, instance:com.testing.AppTest@76329302] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testing.AppTest@76329302]" name="beforeMethod" is-config="true" duration-ms="12965" started-at="2020-03-10T16:58:27 EDT" finished-at="2020-03-10T16:58:40 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ValidEmailPassword()[pri:5, instance:com.testing.AppTest@76329302]" name="ValidEmailPassword" duration-ms="7706" started-at="2020-03-10T16:58:40 EDT" finished-at="2020-03-10T16:58:48 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidEmailPassword -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.testing.AppTest@76329302]" name="afterMethod" is-config="true" duration-ms="901" started-at="2020-03-10T16:58:48 EDT" finished-at="2020-03-10T16:58:49 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidEmailPassword status=SUCCESS method=AppTest.ValidEmailPassword()[pri:5, instance:com.testing.AppTest@76329302] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testing.AppTest@76329302]" name="beforeMethod" is-config="true" duration-ms="13191" started-at="2020-03-10T16:58:49 EDT" finished-at="2020-03-10T16:59:02 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="TotalFirstPageEmail()[pri:6, instance:com.testing.AppTest@76329302]" name="TotalFirstPageEmail" duration-ms="17243" started-at="2020-03-10T16:59:02 EDT" finished-at="2020-03-10T16:59:19 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TotalFirstPageEmail -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.testing.AppTest@76329302]" name="afterMethod" is-config="true" duration-ms="1077" started-at="2020-03-10T16:59:19 EDT" finished-at="2020-03-10T16:59:20 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TotalFirstPageEmail status=SUCCESS method=AppTest.TotalFirstPageEmail()[pri:6, instance:com.testing.AppTest@76329302] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testing.AppTest@76329302]" name="beforeMethod" is-config="true" duration-ms="13771" started-at="2020-03-10T16:59:20 EDT" finished-at="2020-03-10T16:59:34 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="TotalInboxEmail()[pri:7, instance:com.testing.AppTest@76329302]" name="TotalInboxEmail" duration-ms="16349" started-at="2020-03-10T16:59:34 EDT" finished-at="2020-03-10T16:59:50 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TotalInboxEmail -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.testing.AppTest@76329302]" name="afterMethod" is-config="true" duration-ms="1125" started-at="2020-03-10T16:59:50 EDT" finished-at="2020-03-10T16:59:51 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TotalInboxEmail status=SUCCESS method=AppTest.TotalInboxEmail()[pri:7, instance:com.testing.AppTest@76329302] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testing.AppTest@76329302]" name="beforeMethod" is-config="true" duration-ms="13191" started-at="2020-03-10T16:59:51 EDT" finished-at="2020-03-10T17:00:05 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="MoveEmailInboxToTrash()[pri:8, instance:com.testing.AppTest@76329302]" name="MoveEmailInboxToTrash" duration-ms="24893" started-at="2020-03-10T17:00:05 EDT" finished-at="2020-03-10T17:00:29 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MoveEmailInboxToTrash -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.testing.AppTest@76329302]" name="afterMethod" is-config="true" duration-ms="1008" started-at="2020-03-10T17:00:29 EDT" finished-at="2020-03-10T17:00:30 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MoveEmailInboxToTrash status=SUCCESS method=AppTest.MoveEmailInboxToTrash()[pri:8, instance:com.testing.AppTest@76329302] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testing.AppTest@76329302]" name="beforeMethod" is-config="true" duration-ms="13229" started-at="2020-03-10T17:00:30 EDT" finished-at="2020-03-10T17:00:44 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="MoveEmailTrashToInbox()[pri:9, instance:com.testing.AppTest@76329302]" name="MoveEmailTrashToInbox" duration-ms="21675" started-at="2020-03-10T17:00:44 EDT" finished-at="2020-03-10T17:01:05 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MoveEmailTrashToInbox -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.testing.AppTest@76329302]" name="afterMethod" is-config="true" duration-ms="966" started-at="2020-03-10T17:01:05 EDT" finished-at="2020-03-10T17:01:06 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MoveEmailTrashToInbox status=SUCCESS method=AppTest.MoveEmailTrashToInbox()[pri:9, instance:com.testing.AppTest@76329302] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testing.AppTest@76329302]" name="beforeMethod" is-config="true" duration-ms="13151" started-at="2020-03-10T17:01:06 EDT" finished-at="2020-03-10T17:01:20 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="MarkedReadEmailToUnreademail()[pri:10, instance:com.testing.AppTest@76329302]" name="MarkedReadEmailToUnreademail" duration-ms="16632" started-at="2020-03-10T17:01:20 EDT" finished-at="2020-03-10T17:01:36 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MarkedReadEmailToUnreademail -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.testing.AppTest@76329302]" name="afterMethod" is-config="true" duration-ms="990" started-at="2020-03-10T17:01:36 EDT" finished-at="2020-03-10T17:01:37 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MarkedReadEmailToUnreademail status=SUCCESS method=AppTest.MarkedReadEmailToUnreademail()[pri:10, instance:com.testing.AppTest@76329302] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testing.AppTest@76329302]" name="beforeMethod" is-config="true" duration-ms="13003" started-at="2020-03-10T17:01:37 EDT" finished-at="2020-03-10T17:01:50 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="MarkedUnreademailToReadEmail()[pri:11, instance:com.testing.AppTest@76329302]" name="MarkedUnreademailToReadEmail" duration-ms="45208" started-at="2020-03-10T17:01:50 EDT" finished-at="2020-03-10T17:02:35 EDT">
          <exception class="org.openqa.selenium.ElementNotVisibleException">
            <message>
              <![CDATA[element not interactable
  (Session info: chrome=80.0.3987.132)
  (Driver info: chromedriver=79.0.3945.36 (3582db32b33893869b8c1339e8f4d9ed1816f143-refs/branch-heads/3945@{#614}),platform=Windows NT 10.0.18362 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 30.02 seconds
Build info: version: '2.53.1', revision: 'a36b8b1', time: '2016-06-30 17:37:03'
System info: host: 'Niku', ip: '192.168.2.44', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_231'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{mobileEmulationEnabled=false, timeouts={implicit=0, pageLoad=300000, script=30000}, hasTouchScreen=false, platform=XP, acceptSslCerts=false, goog:chromeOptions={debuggerAddress=localhost:62322}, acceptInsecureCerts=false, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=ignore, applicationCacheEnabled=false, rotatable=false, networkConnectionEnabled=false, chrome={chromedriverVersion=79.0.3945.36 (3582db32b33893869b8c1339e8f4d9ed1816f143-refs/branch-heads/3945@{#614}), userDataDir=C:\Users\HPUSER~1\AppData\Local\Temp\scoped_dir12776_1580740391}, takesHeapSnapshot=true, pageLoadStrategy=normal, strictFileInteractability=false, databaseEnabled=false, handlesAlerts=true, version=80.0.3987.132, browserConnectionEnabled=false, proxy={}, nativeEvents=true, locationContextEnabled=true, cssSelectorsEnabled=true}]
Session ID: ddc3fb28900e0cbe4a0a667ab873af8c]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotVisibleException: element not interactable
  (Session info: chrome=80.0.3987.132)
  (Driver info: chromedriver=79.0.3945.36 (3582db32b33893869b8c1339e8f4d9ed1816f143-refs/branch-heads/3945@{#614}),platform=Windows NT 10.0.18362 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 30.02 seconds
Build info: version: '2.53.1', revision: 'a36b8b1', time: '2016-06-30 17:37:03'
System info: host: 'Niku', ip: '192.168.2.44', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_231'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{mobileEmulationEnabled=false, timeouts={implicit=0, pageLoad=300000, script=30000}, hasTouchScreen=false, platform=XP, acceptSslCerts=false, goog:chromeOptions={debuggerAddress=localhost:62322}, acceptInsecureCerts=false, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=ignore, applicationCacheEnabled=false, rotatable=false, networkConnectionEnabled=false, chrome={chromedriverVersion=79.0.3945.36 (3582db32b33893869b8c1339e8f4d9ed1816f143-refs/branch-heads/3945@{#614}), userDataDir=C:\Users\HPUSER~1\AppData\Local\Temp\scoped_dir12776_1580740391}, takesHeapSnapshot=true, pageLoadStrategy=normal, strictFileInteractability=false, databaseEnabled=false, handlesAlerts=true, version=80.0.3987.132, browserConnectionEnabled=false, proxy={}, nativeEvents=true, locationContextEnabled=true, cssSelectorsEnabled=true}]
Session ID: ddc3fb28900e0cbe4a0a667ab873af8c
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:327)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:85)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at com.sun.proxy.$Proxy7.click(Unknown Source)
at com.testing.PageFile.MarkedUnreademailToReadEmail(PageFile.java:352)
at com.testing.AppTest.MarkedUnreademailToReadEmail(AppTest.java:86)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotVisibleException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MarkedUnreademailToReadEmail -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.testing.AppTest@76329302]" name="afterMethod" is-config="true" duration-ms="1294" started-at="2020-03-10T17:02:35 EDT" finished-at="2020-03-10T17:02:37 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MarkedUnreademailToReadEmail status=FAILURE method=AppTest.MarkedUnreademailToReadEmail()[pri:11, instance:com.testing.AppTest@76329302] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.testing.AppTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
